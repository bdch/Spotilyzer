info:
    app:
        name: '@info.app.name@'
        version: '@info.app.version@'
        grailsVersion: '@info.app.grailsVersion@'
grails:
    resources:
        pattern: '/**'
    web:
        static-path-pattern: '/static/'
        static-locations:
            - 'classpath:/static/'
            - 'classpath:/public/'
    codegen:
        defaultPackage: org.bdch
    profile: web
    mime:
        disable:
            accept:
                header:
                    userAgents:
                        - Gecko
                        - WebKit
                        - Presto
                        - Trident
        types:
            all: '*/*'
            atom: application/atom+xml
            css: text/css
            csv: text/csv
            form: application/x-www-form-urlencoded
            html:
                - text/html
                - application/xhtml+xml
            js: text/javascript
            json:
                - application/json
                - text/json
            multipartForm: multipart/form-data
            pdf: application/pdf
            rss: application/rss+xml
            text: text/plain
            hal:
                - application/hal+json
                - application/hal+xml
            xml:
                - text/xml
                - application/xml
    views:
        gsp:
            enabled: false
        default:
            codec: html
    urlmapping:
        cache:
            maxsize: 1000
#dataSource:
#  pooled: true
#  driverClassName: org.h2.Driver
#  dialect: org.hibernate.dialect.PostgreSQLDialect
#  username: iu
#  password: 'iu'
#  url: jdbc:h2:mem:devDb;MVCC=TRUE;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
#  jmxExport: true
environments:
    development:
        dataSource:
            dbCreate: update
            driverClassName: org.postgresql.Driver
            dialect: org.hibernate.dialect.PostgreSQLDialect
            url: jdbc:postgresql://localhost:15432/iu
            username: iu
            password: 'iu'
    laptop:
        dataSource:
            dbCreate: update
            driverClassName: org.postgresql.Driver
            dialect: org.hibernate.dialect.PostgreSQLDialect
            url: jdbc:postgresql://localhost:15432/iu
            username: iu
            password: 'iu'
    test:
        dataSource:
            dbCreate: update
            url: jdbc:postgresql://localhost:15432/iu
    production:
        dataSource:
            dbCreate: none
            url: jdbc:postgresql://localhost:15432/iu
            properties:
                jmxEnabled: true
                initialSize: 5
                maxActive: 50
                minIdle: 5
                maxIdle: 25
                maxWait: 10000
                maxAge: 600000
                timeBetweenEvictionRunsMillis: 5000
                minEvictableIdleTimeMillis: 60000
                validationQuery: SELECT 1
                validationQueryTimeout: 3
                validationInterval: 15000
                testOnBorrow: true
                testWhileIdle: true
                testOnReturn: false
                jdbcInterceptors: ConnectionState
                defaultTransactionIsolation: 2
hibernate:
    #  cache: TODO this is debatable, enable if we want to use second level cache
    #    use_second_level_cache: true
    #    use_query_cache: false
    #    region.factory_class: 'org.hibernate.cache.ehcache.EhCacheRegionFactory'
    format_sql: true
spring:
    autoconfigure:
        exclude:
            - org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration
            - org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration
            - org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration
            - org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration
    web:
        resources:
            static-locations:
                - 'classpath:/public/'
                - 'classpath:/static/'
#logging:
#    level:
#        org.grails.web.mapping: DEBUG
#        org.springframework.web.servlet: DEBUG
#        org.hibernate.SQL: DEBUG
