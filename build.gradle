import org.jetbrains.kotlin.gradle.tasks.KotlinCompile
import org.jetbrains.kotlin.gradle.tasks.KotlinCompilerExecutionStrategy

buildscript {
    repositories {
        maven {
            url "https://repo.grails.org/grails/core/"
        }
    }
    dependencies {
    }
}


plugins {
    id "groovy"
    id "war"
    id "idea"
    id "application"
    id "eclipse"
    // Kotlin plugins - compatible with Java 17 and current Grails
    id "org.jetbrains.kotlin.jvm" version "1.7.22"
    id "org.jetbrains.kotlin.plugin.spring" version "1.7.22"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.7.22"
}

// Grails web support
apply plugin: "org.grails.grails-web"

group = "org.bdch"

repositories {
    mavenCentral()
    maven { url "https://repo.grails.org/grails/core/" }
}

kotlin {
    jvmToolchain(17)
}

configurations {
    configureEach {
    }
}

// Configure source sets explicitly
sourceSets {
    main {
        groovy {
            srcDirs = ['src/main/groovy', 'grails-app/controllers', 'grails-app/services',
                       'grails-app/domain', 'grails-app/init', 'grails-app/utils']
        }
        kotlin {
            srcDirs = ['src/main/kotlin']
        }
    }
}

configurations {
    configureEach {
        // Force consistent Kotlin versions
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            if (details.requested.group == 'org.jetbrains.kotlin') {
                details.useVersion '1.7.22'
                details.because 'Force consistent Kotlin version'
            }
        }
    }
}

dependencies {
    profile "org.grails.profiles:web"
    developmentOnly "org.springframework.boot:spring-boot-devtools"

    implementation "io.github.virtualdogbert:logback-groovy-config:1.12.4"
    implementation "org.grails:grails-core"
    implementation "org.grails:grails-logging"
    implementation "org.grails:grails-plugin-databinding"
    implementation "org.grails:grails-plugin-i18n"
    implementation "org.grails:grails-plugin-interceptors"
    implementation "org.grails:grails-plugin-rest"
    implementation "org.grails:grails-plugin-services"
    implementation "org.grails:grails-plugin-url-mappings"
    implementation "org.grails:grails-web-boot"

    // Hibernate and GORM dependencies
    implementation "org.grails.plugins:hibernate5"
    // We need this to define our custom types like string-array, since Hibernate doesnt support something
    // like `genres: text[]` natively.
    implementation 'com.vladmihalcea:hibernate-types-52:2.21.1'

    implementation "org.springframework.boot:spring-boot-autoconfigure"
    implementation "org.springframework.boot:spring-boot-starter"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-jetty"
    implementation "org.springframework.boot:spring-boot-starter-logging"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation 'org.springframework.security:spring-security-crypto'

    // Kotlin dependencies
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.7.22"
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.7.22"

    compileOnly "io.micronaut:micronaut-inject-groovy"
    console "org.grails:grails-console"
    runtimeOnly "org.apache.tomcat:tomcat-jdbc"
    runtimeOnly "org.fusesource.jansi:jansi:1.18"
    runtimeOnly "org.postgresql:postgresql"
    testImplementation "io.micronaut:micronaut-inject-groovy"
    testImplementation "org.grails:grails-gorm-testing-support"
    testImplementation "org.grails:grails-web-testing-support"
    testImplementation "org.junit.jupiter:junit-jupiter:5.10.3"
}

application {
    mainClass = "org.bdch.groovy.Application"
}

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions.jvmTarget = "17"
    compilerExecutionStrategy = KotlinCompilerExecutionStrategy.DAEMON
//    useDaemonFallbackStrategy.set(false)
    kotlinOptions.freeCompilerArgs = ["-Xjsr305=strict"]
}

allOpen {
    annotation("grails.compiler.GrailsCompileStatic")
    annotation("org.springframework.stereotype.Component")
    annotation("org.springframework.stereotype.Service")
    annotation("org.springframework.transaction.annotation.Transactional")
}

// This wont work, since we need to type a password to connect to the database
//tasks.register('startTunnel', Exec) {
//    commandLine './start-db-tunnel.sh'
//}
//
//bootRun.dependsOn(startTunnel)

